// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"fmt"
	"time"

	"gorm.io/gorm"
)

const TableNameUser = "sys_user"

// User mapped from table <sys_user>
type User struct {
	ID        uint64         `gorm:"column:id;type:bigint(20) unsigned;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt time.Time      `gorm:"column:created_at;type:datetime(3);default:CURRENT_TIMESTAMP(3)" json:"created_at"`
	UpdatedAt time.Time      `gorm:"column:updated_at;type:datetime(3);default:CURRENT_TIMESTAMP(3)" json:"updated_at"`
	DeletedAt gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3)" json:"deleted_at"`
	UserName  string         `gorm:"column:user_name;type:varchar(20);not null" json:"user_name"`
	Password  string         `gorm:"column:password;type:varchar(255);not null" json:"password"`
	Mobile    string         `gorm:"column:mobile;type:varchar(11);not null" json:"mobile"`
	Avatar    string         `gorm:"column:avatar;type:varchar(255)" json:"avatar"`
	NickName  string         `gorm:"column:nick_name;type:varchar(20)" json:"nick_name"`
	Des       string         `gorm:"column:des;type:varchar(255)" json:"des"`
	Status    uint           `gorm:"column:status;type:tinyint(1);default:1;comment:'1正常, 2禁用'" json:"status"` // '1正常, 2禁用'
	Creator   string         `gorm:"column:creator;type:varchar(20)" json:"creator"`
	Roles     []Role         `gorm:"many2many:sys_user_role" json:"roles"`
}

func (u *User) GetUidString() string {
	return fmt.Sprintf("%d", u.ID)
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}

func (user *User) GetRoleIds() []uint64 {
	roleIds := make([]uint64, 0)
	for _, role := range user.Roles {
		roleIds = append(roleIds, role.ID)
	}
	return roleIds
}
